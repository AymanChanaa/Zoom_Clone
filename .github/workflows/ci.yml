name: CI/CD Pipeline

# Trigger the workflow on pull requests to main branch
on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  # Job for type checking and building
  test-and-build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      # Checkout the repository code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Setup Node.js environment
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      # Install dependencies
      - name: Install Dependencies
        run: npm ci

      # Run type checking
      - name: Type Check
        run: npm run type-check

      # Run linting (if you have ESLint configured)
      - name: Lint Code
        run: npm run lint

      # Run tests (if you have tests)
      - name: Run Tests
        run: npm run test --if-present

      # Build the application
      - name: Build Application
        run: npm run build

      # Optional: Cache build artifacts for deployment
      - name: Cache Build
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
            .next/static
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

  # Job for security checks (optional but recommended)
  security-audit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Security Audit
        run: npm audit --audit-level=moderate
